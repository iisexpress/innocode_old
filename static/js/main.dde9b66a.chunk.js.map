{"version":3,"sources":["utils/styled.ts","components/layout/Root.tsx","store/layout/types.ts","containers/LayoutContainer.tsx","store/layout/actions.ts","components/layout/Container.tsx","components/layout/Header.tsx","components/layout/Page.tsx","pages/index.tsx","components/layout/DataTable.tsx","components/data/LoadingOverlay.tsx","components/data/LoadingOverlayInner.tsx","components/data/LoadingSpinner.tsx","store/heroes/types.ts","store/heroes/actions.ts","pages/heroes/index.tsx","components/heroes/HeroInfobox.tsx","components/heroes/HeroStats.tsx","components/heroes/HeroDetails.tsx","pages/heroes/show.tsx","pages/heroes.tsx","store/teams/types.ts","store/teams/actions.ts","pages/teams/index.tsx","components/teams/TeamInfobox.tsx","components/teams/TeamStats.tsx","pages/teams/show.tsx","pages/teams.tsx","styles/normalize.ts","styles/globals.ts","routes.tsx","styles/colors/brandColors.ts","styles/theme/dark.ts","styles/theme/light.ts","main.tsx","serviceWorker.ts","store/layout/reducer.ts","utils/api.ts","store/heroes/sagas.ts","store/heroes/reducer.ts","store/teams/sagas.ts","store/teams/reducer.ts","store/index.ts","index.tsx","configureStore.ts"],"names":["styled","Root","children","Wrapper","props","theme","colors","background","body","fonts","LayoutActionTypes","LayoutContainer","render","useSelector","state","layout","dispatch","useDispatch","setTheme","color","action","SET_THEME","layoutActions","Container","widths","md","breakpoints","lg","xl","brand","white","headings","HeaderInner","HeaderLeft","HeaderNav","HeaderNavLink","NavLink","HeaderRight","Title","CurrentTheme","ThemeSwitcherButton","Header","title","exact","to","activeClassName","onClick","Page","containerPadding","IndexPage","PageContent","href","target","rel","DataTable","columns","map","column","i","key","style","width","undefined","borders","tableOdd","LoadingOverlay","transparentize","LoadingOverlayInner","LoadingSpinner","Spinner","className","CubeMove","keyframes","HeroesActionTypes","fetchRequest","FETCH_REQUEST","fetchError","message","FETCH_ERROR","API_ENDPOINT","process","REACT_APP_API_ENDPOINT","HeroesIndexPage","React","componentDidMount","fr","this","renderData","loading","data","length","HeroLoading","colSpan","hero","id","HeroDetail","HeroIcon","src","icon","alt","name","HeroName","localized_name","pro_pick","pro_ban","pro_win","TableWrapper","mapDispatchToProps","connect","heroes","errors","HeroInfobox","darken","HeroInfoboxBlurBackground","HeroInfoboxInner","HeroInfoboxImage","HeroInfoboxHeading","HeroRoles","HeroStats","HeroStatsInner","StatAttribute","isPrimaryAttr","attrs","attr","Bullet","HeroDetailsAttrName","HeroDetailsRow","HeroDetailsColumn","HeroDetails","ShowHeroesPage","constructor","super","fetchHeroes","match","selected","find","params","img","attack_type","roles","join","primary_attr","base_str","str_gain","base_agi","agi_gain","base_int","int_gain","base_attack_min","base_attack_max","attack_range","attack_speed","projectile_speed","base_health","base_health_regen","base_mana","base_mana_regen","base_mr","move_speed","turn_rate","legs","cm_enabled","path","component","TeamsActionTypes","TeamsIndexPage","fetchTeams","slice","team","lastMatch","moment","last_match_time","team_id","TeamDetail","TeamLogo","logo_url","tag","TeamName","rating","toFixed","wins","losses","dateTime","toISOString","format","fromNow","teams","TeamInfobox","black","TeamInfoboxBlurBackground","TeamInfoboxInner","TeamInfoboxHeading","TeamStats","TeamStatsInner","StatItem","StatHeading","StatNumber","agi","str","ShowTeamsPage","selectTeam","componentWillUnmount","clearSelected","detail","players","filter","player","is_current_team_member","account_id","PlayerDetail","PlayerIcon","accountId","PlayerName","games_played","teamId","SELECT_TEAM","CLEAR_SELECTED","normalize","css","globals","Routes","styles","HeroesPage","TeamsPage","brandColors","gray75","gray60","gray50","gray40","gray30","gray20","gray10","gray5","yellow","red","green","lightTheme","lighten","int","monospace","fontSizes","h1","h2","h3","h4","xs","sm","heights","header","Main","store","history","themes","Boolean","window","location","hostname","initialState","reducer","type","payload","async","callApi","method","url","fetch","headers","Accept","JSON","stringify","json","handleFetch","res","call","error","put","FETCH_SUCCESS","err","Error","stack","watchFetchRequest","takeEvery","heroesSaga","all","fork","handleSelect","SELECTED","watchSelectTeam","takeLatest","rootSaga","teamsSaga","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","layoutReducer","heroesReducer","teamsReducer","router","connectRouter","createRootReducer","applyMiddleware","routerMiddleware","run","configureStore","INITIAL_REDUX_STATE","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dde9b66a.chunk.js","sourcesContent":["import styled, { CreateStyled } from '@emotion/styled'\n\nexport interface Theme {\n  colors: {\n    background: string\n    body: string\n    headings: string\n    borders: string\n    tableOdd: string\n    brand: string\n    black: string\n    white: string\n    attrs: {\n      str: string\n      agi: string\n      int: string\n    }\n  }\n  fonts: {\n    body: string\n    headings: string\n    monospace: string\n  }\n  fontSizes: {\n    h1: string\n    h2: string\n    h3: string\n    h4: string\n  }\n  containerPadding: string\n  breakpoints: {\n    xs: string\n    sm: string\n    md: string\n    lg: string\n    xl: string\n  }\n  widths: {\n    md: string\n    lg: string\n    xl: string\n  }\n  heights: {\n    header: string\n  }\n}\n\nexport default styled as CreateStyled<Theme>\n","import * as React from 'react'\nimport styled from '../../utils/styled'\n\ninterface RootProps {\n  className?: string\n}\n\nconst Root: React.SFC<RootProps> = ({ children }) => <Wrapper>{children}</Wrapper>\n\nexport default Root\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.body};\n  font-family: ${props => props.theme.fonts.body};\n`\n","// Example for using discriminated union types.\nexport type ThemeColors = 'light' | 'dark'\n\n// Use enums for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum LayoutActionTypes {\n  SET_THEME = '@@layout/SET_THEME'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface LayoutState {\n  readonly theme: ThemeColors\n}\n","import * as React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { ApplicationState } from '../store'\nimport { ThemeColors } from '../store/layout'\nimport * as layoutActions from '../store/layout/actions'\n\n// Now here is an example of creating container components.\n//\n// Before React v16 I would've suggested against implementing container components that are\n// separate from their connected view logic, since they intrude at the very definition of a view,\n// but now with newer patterns (e.g. render props), it makes sense to use them once again.\n//\n// See how this works at `./src/components/Header`\n\n// Redux-specific props.\ninterface LayoutContainerProps {\n  theme: ThemeColors\n  setTheme: (theme: ThemeColors) => void\n}\n\n// Wrapper props for render/children callback.\ninterface LayoutContainerRenderProps {\n  render?: (props: LayoutContainerProps) => React.ReactElement\n  children?: (props: LayoutContainerProps) => React.ReactElement\n}\n\nconst LayoutContainer: React.FC<LayoutContainerRenderProps> = ({ render, children }) => {\n  // We can use Hooks to call in our selector/dispatch functions.\n  const { theme } = useSelector((state: ApplicationState) => state.layout)\n  const dispatch = useDispatch()\n\n  // Create the `setTheme` handler. We use the `dispatch` we got from `useDispatch()` to create said selector.\n  const setTheme = (color: ThemeColors) => dispatch(layoutActions.setTheme(color))\n\n  // Create a render/children props wrapper with the above variables set as a callback.\n  if (render) {\n    return render({ theme, setTheme })\n  }\n\n  if (children) {\n    return children({ theme, setTheme })\n  }\n\n  return null\n}\n\nexport default LayoutContainer\n","import { action } from 'typesafe-actions'\n\nimport { LayoutActionTypes, ThemeColors } from './types'\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\n//\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\n\nexport const setTheme = (theme: ThemeColors) => action(LayoutActionTypes.SET_THEME, theme)\n","import styled from '../../utils/styled'\n\nconst Container = styled('div')`\n  margin: 0 auto;\n  width: 100%;\n  max-width: ${props => props.theme.widths.md};\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    max-width: ${props => props.theme.widths.lg};\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.xl}) {\n    max-width: ${props => props.theme.widths.xl};\n  }\n`\n\nexport default Container\n","import * as React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from '../../utils/styled'\nimport LayoutContainer from '../../containers/LayoutContainer'\nimport Container from './Container'\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Wrapper = styled('header')`\n  padding: 0.5rem 1.5rem;\n  background-color: ${props => props.theme.colors.brand};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fonts.headings};\n`\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    flex-direction: row;\n  }\n`\n\nconst HeaderLeft = styled('div')`\n  padding-right: 1rem;\n`\n\nconst HeaderNav = styled('nav')`\n  flex: 1 1 auto;\n  margin: 1rem 0;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0;\n  }\n`\n\nconst HeaderNavLink = styled(NavLink)`\n  margin: 0 1rem;\n\n  &.is-active {\n    text-decoration: underline;\n  }\n`\n\nconst HeaderRight = styled('div')`\n  padding-left: 1rem;\n`\n\nconst Title = styled('h2')`\n  margin: 0;\n  font-weight: 500;\n`\n\nconst CurrentTheme = styled('span')`\n  margin-right: 1rem;\n`\n\nconst ThemeSwitcherButton = styled('button')`\n  display: inline-block;\n  padding: 0.25rem 0.5rem;\n  border: 1px solid ${props => props.theme.colors.white};\n  border-radius: 3px;\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.brand};\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover,\n  &:focus {\n    background-color: transparent;\n    color: ${props => props.theme.colors.white};\n  }\n`\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n  <Wrapper>\n    <HeaderInner>\n      <HeaderLeft>\n        <Title>{title}</Title>\n      </HeaderLeft>\n      <HeaderNav>\n        <HeaderNavLink exact to=\"/\" activeClassName=\"is-active\">\n          Home\n        </HeaderNavLink>\n        <HeaderNavLink to=\"/heroes\" activeClassName=\"is-active\">\n          Heroes\n        </HeaderNavLink>\n        <HeaderNavLink to=\"/teams\" activeClassName=\"is-active\">\n          Teams\n        </HeaderNavLink>\n      </HeaderNav>\n      <HeaderRight>\n        <LayoutContainer>\n          {({ theme, setTheme }) => (\n            <>\n              <CurrentTheme>Current theme: {theme}</CurrentTheme>\n              <ThemeSwitcherButton onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}>Switch theme</ThemeSwitcherButton>\n            </>\n          )}\n        </LayoutContainer>\n      </HeaderRight>\n    </HeaderInner>\n  </Wrapper>\n)\n\nexport default Header\n","import styled from '../../utils/styled'\n\nconst Page = styled('div')`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 auto;\n  padding: ${props => props.theme.containerPadding};\n  padding-bottom: 3rem;\n`\n\nexport default Page\n","import * as React from 'react'\nimport Page from '../components/layout/Page'\nimport Container from '../components/layout/Container'\nimport styled from '../utils/styled'\n\nfunction IndexPage() {\n  return (\n    <Page>\n      <Container>\n        <PageContent>\n          <h1>Welcome!</h1>\n          <p>\n            Welcome to the Redux 4 + TypeScript 3.3 example! This example site shows you the ideal project structure, recommended libraries,\n            as well as design pattern on writing type-safe React + Redux app with TypeScript.\n          </p>\n          <p>\n            This project is intended as a supplement to{' '}\n            <a href=\"https://resir014.xyz/posts/2018/07/06/redux-4-plus-typescript/\" target=\"blank\" rel=\"noopener noreferrer\">\n              this post\n            </a>\n            . To demonstrate it, I created a website which pulls data from the{' '}\n            <a href=\"https://docs.opendota.com\" target=\"blank\" rel=\"noopener noreferrer\">\n              OpenDota API\n            </a>\n            , and display information like professional teams, heroes, as well as top players by hero. This will also demonstrate how to\n            structure your stores for each feature/module in a Redux-enabled app.\n          </p>\n          <p>Enjoy your stay!</p>\n        </PageContent>\n      </Container>\n    </Page>\n  )\n}\n\nexport default IndexPage\n\nconst PageContent = styled('article')`\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  line-height: 1.6;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    margin-bottom: 0.5rem;\n    font-family: ${props => props.theme.fonts.headings};\n    line-height: 1.25;\n  }\n`\n","import * as React from 'react'\nimport styled from '../../utils/styled'\n\ninterface DataTableProps {\n  columns: string[]\n  widths?: string[]\n}\n\nconst DataTable: React.SFC<DataTableProps> = ({ children, widths, columns }) => (\n  <Wrapper>\n    <thead>\n      <tr>\n        {columns.map((column, i) => (\n          <th key={column} style={widths && widths[i] ? { width: widths[i] } : undefined}>\n            {column}\n          </th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>{children}</tbody>\n  </Wrapper>\n)\n\nexport default DataTable\n\nconst Wrapper = styled('table')`\n  margin-bottom: 0;\n  border-top: 1px solid ${props => props.theme.colors.borders};\n  border-bottom: 1px solid ${props => props.theme.colors.borders};\n\n  thead {\n    tr {\n      th {\n        padding: 1rem;\n        text-align: left;\n        border-bottom: 2px solid ${props => props.theme.colors.borders};\n      }\n    }\n  }\n\n  tbody {\n    tr {\n      border-top: 1px solid ${props => props.theme.colors.borders};\n\n      &:nth-child(even) {\n        background: ${props => props.theme.colors.tableOdd};\n      }\n\n      td {\n        padding: 0.5rem 1rem;\n        font-size: 0.85rem;\n      }\n    }\n  }\n`\n","import { transparentize } from 'polished'\nimport styled from '../../utils/styled'\n\nconst LoadingOverlay = styled('div')`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n  background: ${props => transparentize(0.25, props.theme.colors.background)};\n`\n\nexport default LoadingOverlay\n","import styled from '../../utils/styled'\n\nconst LoadingOverlayInner = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n`\n\nexport default LoadingOverlayInner\n","import * as React from 'react'\nimport { keyframes } from '@emotion/core'\nimport styled from '../../utils/styled'\n\nconst LoadingSpinner: React.SFC = () => (\n  <Spinner>\n    <div className=\"cube1\" />\n    <div className=\"cube2\" />\n  </Spinner>\n)\n\nexport default LoadingSpinner\n\nconst CubeMove = keyframes`\n  25% {\n    transform: translateX(42px) rotate(-90deg) scale(0.5);\n    -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n  } 50% {\n    transform: translateX(42px) translateY(42px) rotate(-179deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);\n  } 50.1% {\n    transform: translateX(42px) translateY(42px) rotate(-180deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n  } 75% {\n    transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n    -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n  } 100% {\n    transform: rotate(-360deg);\n    -webkit-transform: rotate(-360deg);\n  }\n`\n\nconst Spinner = styled('div')`\n  margin: 100px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n\n  & .cube1,\n  & .cube2 {\n    background-color: ${props => props.theme.colors.brand};\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    -webkit-animation: ${CubeMove} 1.8s infinite ease-in-out;\n    animation: ${CubeMove} 1.8s infinite ease-in-out;\n  }\n\n  & .cube2 {\n    -webkit-animation-delay: -0.9s;\n    animation-delay: -0.9s;\n  }\n`\n","// This file holds our state type, as well as any other types related to this Redux store.\n\n// Response object for GET /heroes\n// https://docs.opendota.com/#tag/heroes%2Fpaths%2F~1heroes%2Fget\nexport interface Hero extends ApiResponse {\n  id: number\n  name: string\n  localized_name: string\n  primary_attr: string\n  attack_type: string\n  roles: string[]\n  img: string\n  icon: string\n  base_health: number\n  base_health_regen: number\n  base_mana: number\n  base_mana_regen: number\n  base_armor: number\n  base_mr: number\n  base_attack_min: number\n  base_attack_max: number\n  base_str: number\n  base_agi: number\n  base_int: number\n  str_gain: number\n  agi_gain: number\n  int_gain: number\n  attack_range: number\n  projectile_speed: number\n  attack_rate: number\n  move_speed: number\n  turn_rate: number\n  cm_enabled: boolean\n  legs: number\n}\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\nexport type ApiResponse = Record<string, any>\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum HeroesActionTypes {\n  FETCH_REQUEST = '@@heroes/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@heroes/FETCH_SUCCESS',\n  FETCH_ERROR = '@@heroes/FETCH_ERROR',\n  SELECT_HERO = '@@heroes/SELECT_HERO',\n  SELECTED = '@@heroes/SELECTED'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface HeroesState {\n  readonly loading: boolean\n  readonly data: Hero[]\n  readonly errors?: string\n}\n","import { action } from 'typesafe-actions'\nimport { HeroesActionTypes, Hero } from './types'\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const fetchRequest = () => action(HeroesActionTypes.FETCH_REQUEST)\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const fetchSuccess = (data: Hero[]) => action(HeroesActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(HeroesActionTypes.FETCH_ERROR, message)\n","import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport styled from '../../utils/styled'\nimport Page from '../../components/layout/Page'\nimport Container from '../../components/layout/Container'\nimport DataTable from '../../components/layout/DataTable'\nimport LoadingOverlay from '../../components/data/LoadingOverlay'\nimport LoadingOverlayInner from '../../components/data/LoadingOverlayInner'\nimport LoadingSpinner from '../../components/data/LoadingSpinner'\n\nimport { ApplicationState } from '../../store'\nimport { Hero } from '../../store/heroes/types'\nimport { fetchRequest } from '../../store/heroes/actions'\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean\n  data: Hero[]\n  errors?: string\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n  fetchRequest: typeof fetchRequest\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.opendota.com'\n\nclass HeroesIndexPage extends React.Component<AllProps> {\n  public componentDidMount() {\n    const { fetchRequest: fr } = this.props\n    fr()\n  }\n\n  private renderData() {\n    const { loading, data } = this.props\n\n    return (\n      <DataTable columns={['Hero', 'Pro Picks/Bans*', 'Pro Wins*']} widths={['auto', '', '']}>\n        {loading && data.length === 0 && (\n          <HeroLoading>\n            <td colSpan={3}>Loading...</td>\n          </HeroLoading>\n        )}\n        {data.map(hero => (\n          <tr key={hero.id}>\n            <HeroDetail>\n              <HeroIcon src={API_ENDPOINT + hero.icon} alt={hero.name} />\n              <HeroName>\n                <Link to={`/heroes/${hero.name}`}>{hero.localized_name}</Link>\n              </HeroName>\n            </HeroDetail>\n            <td>\n              {hero.pro_pick || 0} / {hero.pro_ban || 0}\n            </td>\n            <td>{hero.pro_win || 0}</td>\n          </tr>\n        ))}\n      </DataTable>\n    )\n  }\n\n  public render() {\n    const { loading } = this.props\n\n    return (\n      <Page>\n        <Container>\n          <TableWrapper>\n            {loading && (\n              <LoadingOverlay>\n                <LoadingOverlayInner>\n                  <LoadingSpinner />\n                </LoadingOverlayInner>\n              </LoadingOverlay>\n            )}\n            <p>\n              <small>*in last 30 days</small>\n            </p>\n            {this.renderData()}\n          </TableWrapper>\n        </Container>\n      </Page>\n    )\n  }\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ heroes }: ApplicationState) => ({\n  loading: heroes.loading,\n  errors: heroes.errors,\n  data: heroes.data\n})\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n  fetchRequest\n}\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeroesIndexPage)\n\nconst TableWrapper = styled('div')`\n  position: relative;\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  min-height: 200px;\n`\n\nconst HeroDetail = styled('td')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst HeroIcon = styled('img')`\n  width: 32px;\n  height: 32px;\n`\n\nconst HeroName = styled('div')`\n  flex: 1 1 auto;\n  height: 100%;\n  margin-left: 1rem;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n`\n\nconst HeroLoading = styled('tr')`\n  td {\n    height: 48px;\n    text-align: center;\n  }\n`\n","import { darken } from 'polished'\n\nimport styled from '../../utils/styled'\n\nexport const HeroInfobox = styled('div')`\n  position: relative;\n  background: rgba(0, 0, 0, 0.9);\n  overflow: hidden;\n  border-radius: 8px;\n  color: ${props => darken(0.25, props.theme.colors.white)};\n`\n\nexport const HeroInfoboxBlurBackground = styled('img')`\n  position: absolute;\n  top: -12.5%;\n  left: -12.5%;\n  width: 125%;\n  height: 125%;\n  filter: blur(25px);\n  object-fit: cover;\n  opacity: 0.35;\n  background-repeat: no-repeat;\n  z-index: 1;\n`\n\nexport const HeroInfoboxInner = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  padding: 3rem;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 125px inset;\n  z-index: 2;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    flex-direction: row;\n  }\n`\n\nexport const HeroInfoboxImage = styled('img')`\n  display: block;\n  flex-shrink: 0;\n  width: 180px;\n  height: 128px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 12px 32px;\n  object-fit: cover;\n  border-radius: 16px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: rgba(0, 0, 0, 0.3);\n  border-image: initial;\n`\n\nexport const HeroInfoboxHeading = styled('div')`\n  flex: 1 1 100%;\n  margin: 1.5rem 0 0;\n  text-align: center;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0 1.5rem;\n    text-align: left;\n  }\n`\n\nexport const HeroName = styled('h1')`\n  margin: 0;\n  color: ${props => props.theme.colors.white};\n  font-weight: 500;\n`\n\nexport const HeroRoles = styled('p')`\n  margin: 0.5rem 0 0;\n  color: ${props => props.theme.colors.white};\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n\n  & span {\n    color: ${props => darken(0.25, props.theme.colors.white)};\n  }\n`\n","import styled from '../../utils/styled'\n\nexport const HeroStats = styled('div')`\n  display: block;\n  max-width: 340px;\n  margin: 1.5rem 0 0;\n  background: rgba(0, 0, 0, 0.45);\n  border-radius: 8px;\n  padding: 12px;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0;\n    flex: 1 0 340px;\n  }\n`\n\nexport const HeroStatsInner = styled('div')`\n  display: flex;\n`\n\nexport interface StatAttributeProps {\n  attr: 'str' | 'agi' | 'int'\n  isPrimaryAttr?: boolean\n}\n\nexport const StatAttribute = styled('div')<StatAttributeProps>`\n  display: flex;\n  align-items: center;\n  flex: 1 1 0;\n  padding: 0 1rem;\n  font-size: 0.8rem;\n  color: ${props => props.isPrimaryAttr && props.theme.colors.attrs[props.attr]};\n`\n\nexport interface BulletProps {\n  attr: 'str' | 'agi' | 'int'\n}\n\nexport const Bullet = styled('div')<BulletProps>`\n  flex-shrink: 0;\n  height: 0.5rem;\n  width: 0.5rem;\n  margin-right: 8px;\n  border-radius: 50%;\n  background-color: ${props => props.theme.colors.attrs[props.attr]};\n`\n","import { transparentize } from 'polished'\nimport styled from '../../utils/styled'\n\nexport const HeroDetailsAttrName = styled('span')`\n  color: ${props => transparentize(0.25, props.theme.colors.body)};\n  flex-grow: 1;\n  font-size: 12px;\n  margin-right: 5px;\n  text-transform: uppercase;\n`\n\nexport const HeroDetailsRow = styled('span')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.body};\n  border-top: 1px solid ${props => props.theme.colors.borders};\n\n  &:nth-of-type(even) {\n    background: ${props => props.theme.colors.tableOdd};\n  }\n\n  &:last-of-type {\n    border-bottom: 1px solid ${props => props.theme.colors.borders};\n  }\n`\n\nexport const HeroDetailsColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 0px;\n  padding: 8px;\n`\n\nexport const HeroDetails = styled('div')`\n  display: flex;\n  margin-top: 10px;\n  margin-left: -8px;\n  margin-right: -8px;\n`\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps } from 'react-router'\n\nimport {\n  HeroInfobox,\n  HeroInfoboxImage,\n  HeroInfoboxHeading,\n  HeroInfoboxInner,\n  HeroInfoboxBlurBackground,\n  HeroName,\n  HeroRoles\n} from '../../components/heroes/HeroInfobox'\nimport { HeroStats, HeroStatsInner, StatAttribute, Bullet } from '../../components/heroes/HeroStats'\nimport { HeroDetails, HeroDetailsColumn, HeroDetailsRow, HeroDetailsAttrName } from '../../components/heroes/HeroDetails'\nimport Page from '../../components/layout/Page'\nimport Container from '../../components/layout/Container'\n\nimport { ApplicationState } from '../../store'\nimport { Hero } from '../../store/heroes/types'\nimport { fetchRequest } from '../../store/heroes/actions'\nimport styled from '../../utils/styled'\nimport LoadingOverlay from '../../components/data/LoadingOverlay'\nimport LoadingOverlayInner from '../../components/data/LoadingOverlayInner'\nimport LoadingSpinner from '../../components/data/LoadingSpinner'\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean\n  data: Hero[]\n  errors?: string\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n  fetchHeroes: typeof fetchRequest\n}\n\ninterface RouteParams {\n  name: string\n}\n\ninterface State {\n  selected?: Hero\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch & RouteComponentProps<RouteParams>\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.opendota.com'\n\nconst Wrapper = styled('div')`\n  position: relative;\n`\n\nclass ShowHeroesPage extends React.Component<AllProps, State> {\n  constructor(props: AllProps) {\n    super(props)\n\n    this.state = {}\n  }\n\n  public componentDidMount() {\n    const { data, fetchHeroes } = this.props\n\n    if (!data || data.length === 0) {\n      fetchHeroes()\n    }\n  }\n\n  public render() {\n    const { data, loading, match } = this.props\n    const selected = data.find(hero => hero.name === match.params.name)\n\n    return (\n      <Page>\n        <Container>\n          <Wrapper>\n            {loading && (\n              <LoadingOverlay>\n                <LoadingOverlayInner>\n                  <LoadingSpinner />\n                </LoadingOverlayInner>\n              </LoadingOverlay>\n            )}\n            {selected && (\n              <>\n                <HeroInfobox>\n                  <HeroInfoboxBlurBackground src={API_ENDPOINT + selected.img} />\n                  <HeroInfoboxInner>\n                    <HeroInfoboxImage src={API_ENDPOINT + selected.img} />\n                    <HeroInfoboxHeading>\n                      <HeroName>{selected.localized_name}</HeroName>\n                      <HeroRoles>\n                        {selected.attack_type} - <span>{selected.roles.join(', ')}</span>\n                      </HeroRoles>\n                    </HeroInfoboxHeading>\n                    <HeroStats>\n                      <HeroStatsInner>\n                        <StatAttribute attr=\"str\" isPrimaryAttr={selected.primary_attr === 'str'}>\n                          <Bullet attr=\"str\" /> {selected.base_str || 0} + {selected.str_gain || 0}\n                        </StatAttribute>\n                        <StatAttribute attr=\"agi\" isPrimaryAttr={selected.primary_attr === 'agi'}>\n                          <Bullet attr=\"agi\" /> {selected.base_agi || 0} + {selected.agi_gain || 0}\n                        </StatAttribute>\n                        <StatAttribute attr=\"int\" isPrimaryAttr={selected.primary_attr === 'int'}>\n                          <Bullet attr=\"int\" /> {selected.base_int || 0} + {selected.int_gain || 0}\n                        </StatAttribute>\n                      </HeroStatsInner>\n                    </HeroStats>\n                  </HeroInfoboxInner>\n                </HeroInfobox>\n                <HeroDetails>\n                  <HeroDetailsColumn>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Base Attack:</HeroDetailsAttrName> {selected.base_attack_min} - {selected.base_attack_max}\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Attack Range:</HeroDetailsAttrName> {selected.attack_range || '-'}\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Attack Speed:</HeroDetailsAttrName> {selected.attack_speed || '-'}\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Projectile Speed:</HeroDetailsAttrName> {selected.projectile_speed || '-'}\n                    </HeroDetailsRow>\n                  </HeroDetailsColumn>\n                  <HeroDetailsColumn>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Health:</HeroDetailsAttrName> {selected.base_health || 0}\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Health Regen:</HeroDetailsAttrName> {selected.base_health_regen || 0}\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Mana:</HeroDetailsAttrName> {selected.base_mana || 0}\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Mana Regen:</HeroDetailsAttrName> {selected.base_mana_regen || 0}\n                    </HeroDetailsRow>\n                  </HeroDetailsColumn>\n                  <HeroDetailsColumn>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Base Armor:</HeroDetailsAttrName> -\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Magic Resistance:</HeroDetailsAttrName> {selected.base_mr || 0}%\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Move Speed:</HeroDetailsAttrName> {selected.move_speed || 0}\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Turn Speed:</HeroDetailsAttrName> {selected.turn_rate || 0}\n                    </HeroDetailsRow>\n                  </HeroDetailsColumn>\n                  <HeroDetailsColumn>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>Number of Legs:</HeroDetailsAttrName> {selected.legs}\n                    </HeroDetailsRow>\n                    <HeroDetailsRow>\n                      <HeroDetailsAttrName>CM Enabled:</HeroDetailsAttrName> {selected.cm_enabled ? 'yes' : 'no'}\n                    </HeroDetailsRow>\n                  </HeroDetailsColumn>\n                </HeroDetails>\n              </>\n            )}\n          </Wrapper>\n        </Container>\n      </Page>\n    )\n  }\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ heroes }: ApplicationState) => ({\n  loading: heroes.loading,\n  errors: heroes.errors,\n  data: heroes.data\n})\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n  fetchHeroes: fetchRequest\n}\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowHeroesPage)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps, Route, Switch } from 'react-router-dom'\n\nimport HeroesIndexPage from './heroes/index'\nimport ShowHeroesPage from './heroes/show'\n\nimport { ApplicationState } from '../store'\nimport { Hero } from '../store/heroes/types'\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean\n  data: Hero[]\n  errors?: string\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & RouteComponentProps\n\nconst HeroesPage: React.FC<AllProps> = ({ match }) => {\n  return (\n    <Switch>\n      <Route exact path={`${match.path}/`} component={HeroesIndexPage} />\n      <Route path={`${match.path}/:name`} component={ShowHeroesPage} />\n    </Switch>\n  )\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ heroes }: ApplicationState) => ({\n  loading: heroes.loading,\n  errors: heroes.errors,\n  data: heroes.data\n})\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(mapStateToProps)(HeroesPage)\n","// This file holds our state type, as well as any other types related to this Redux store.\n\n// Response object for GET /teams\n// https://docs.opendota.com/#tag/teams%2Fpaths%2F~1teams%2Fget\nexport interface Team {\n  team_id: number\n  rating: number\n  wins: number\n  losses: number\n  last_match_time: number\n  name: string\n  tag?: string\n  logo_url?: string\n}\n\nexport interface Player {\n  account_id: number\n  name: string\n  games_played: number\n  wins: number\n  is_current_team_member: boolean\n}\n\nexport interface TeamSelectedPayload {\n  detail: Team\n  players: Player[]\n}\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum TeamsActionTypes {\n  FETCH_REQUEST = '@@teams/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@teams/FETCH_SUCCESS',\n  FETCH_ERROR = '@@teams/FETCH_ERROR',\n  SELECT_TEAM = '@@teams/SELECT_TEAM',\n  SELECTED = '@@teams/SELECTED',\n  CLEAR_SELECTED = '@@teams/CLEAR_SELECTED'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface TeamsState {\n  readonly loading: boolean\n  readonly data: Team[]\n  readonly selected?: TeamSelectedPayload\n  readonly errors?: string\n}\n","import { action } from 'typesafe-actions'\nimport { TeamsActionTypes, Team, TeamSelectedPayload } from './types'\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const fetchRequest = () => action(TeamsActionTypes.FETCH_REQUEST)\nexport const clearSelected = () => action(TeamsActionTypes.CLEAR_SELECTED)\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const fetchSuccess = (data: Team[]) => action(TeamsActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(TeamsActionTypes.FETCH_ERROR, message)\nexport const selectTeam = (teamId: string) => action(TeamsActionTypes.SELECT_TEAM, teamId)\nexport const teamSelected = (team: TeamSelectedPayload) => action(TeamsActionTypes.SELECTED, team)\n","import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nimport styled from '../../utils/styled'\nimport Page from '../../components/layout/Page'\nimport Container from '../../components/layout/Container'\nimport DataTable from '../../components/layout/DataTable'\nimport LoadingOverlay from '../../components/data/LoadingOverlay'\nimport LoadingOverlayInner from '../../components/data/LoadingOverlayInner'\nimport LoadingSpinner from '../../components/data/LoadingSpinner'\n\nimport { ApplicationState } from '../../store'\nimport { Team } from '../../store/teams/types'\nimport { fetchRequest } from '../../store/teams/actions'\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean\n  data: Team[]\n  errors?: string\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n  fetchTeams: typeof fetchRequest\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch\n\nclass TeamsIndexPage extends React.Component<AllProps> {\n  public componentDidMount() {\n    const { data, fetchTeams } = this.props\n\n    if (data.length === 0) {\n      fetchTeams()\n    }\n  }\n\n  private renderData() {\n    const { data } = this.props\n\n    return (\n      <DataTable columns={['Rank', 'Team', 'Rating', 'Wins / Losses', 'Last Match']} widths={['', 'auto', '', '', '']}>\n        {data.slice(0, 20).map((team, i) => {\n          const lastMatch = moment(team.last_match_time * 1000)\n\n          return (\n            <tr key={team.team_id}>\n              <td>{i + 1}</td>\n              <TeamDetail>\n                <TeamLogo>{team.logo_url && <img src={team.logo_url} alt={team.tag} />}</TeamLogo>\n                <TeamName>\n                  <Link to={`/teams/${team.team_id}`}>{team.name || '(no name)'}</Link>\n                </TeamName>\n              </TeamDetail>\n              <td>{team.rating.toFixed(0)}</td>\n              <td>\n                {team.wins || 0} / {team.losses || 0}\n              </td>\n              <td>\n                <time dateTime={lastMatch.toISOString()} title={lastMatch.format('LLLL')}>\n                  {lastMatch.fromNow()}\n                </time>\n              </td>\n            </tr>\n          )\n        })}\n      </DataTable>\n    )\n  }\n\n  public render() {\n    const { loading } = this.props\n\n    return (\n      <Page>\n        <Container>\n          <TableWrapper>\n            {loading && (\n              <LoadingOverlay>\n                <LoadingOverlayInner>\n                  <LoadingSpinner />\n                </LoadingOverlayInner>\n              </LoadingOverlay>\n            )}\n            {this.renderData()}\n          </TableWrapper>\n        </Container>\n      </Page>\n    )\n  }\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ teams }: ApplicationState) => ({\n  loading: teams.loading,\n  errors: teams.errors,\n  data: teams.data\n})\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n  fetchTeams: fetchRequest\n}\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TeamsIndexPage)\n\nconst TableWrapper = styled('div')`\n  position: relative;\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  min-height: 200px;\n`\n\nconst TeamDetail = styled('td')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  min-height: 66px;\n`\n\nconst TeamLogo = styled('div')`\n  position: relative;\n  width: 50px;\n  height: 50px;\n\n  img {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n`\n\nconst TeamName = styled('div')`\n  flex: 1 1 auto;\n  height: 100%;\n  margin-left: 1rem;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n`\n","import { darken, transparentize } from 'polished'\n\nimport styled from '../../utils/styled'\n\nexport const TeamInfobox = styled('div')`\n  position: relative;\n  background: ${props => transparentize(0.1, props.theme.colors.black)};\n  overflow: hidden;\n  border-radius: 8px;\n  color: ${props => darken(0.25, props.theme.colors.white)};\n`\n\nexport const TeamInfoboxBlurBackground = styled('img')`\n  position: absolute;\n  top: -12.5%;\n  left: -12.5%;\n  width: 125%;\n  height: 125%;\n  filter: blur(25px);\n  object-fit: cover;\n  opacity: 0.35;\n  background-repeat: no-repeat;\n  z-index: 1;\n`\n\nexport const TeamInfoboxInner = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  padding: 3rem;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 125px inset;\n  z-index: 2;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    flex-direction: row;\n  }\n`\n\nexport const TeamLogo = styled('img')`\n  display: block;\n  flex-shrink: 0;\n  width: 180px;\n  height: 128px;\n  padding: 1rem;\n  background: ${props => transparentize(0.1, props.theme.colors.black)};\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 12px 32px;\n  object-fit: contain;\n  border-radius: 16px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: rgba(0, 0, 0, 0.3);\n  border-image: initial;\n`\n\nexport const TeamInfoboxHeading = styled('div')`\n  flex: 1 1 100%;\n  margin: 1.5rem 0 0;\n  text-align: center;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0 1.5rem;\n    text-align: left;\n  }\n`\n\nexport const TeamName = styled('h1')`\n  margin: 0;\n  color: ${props => props.theme.colors.white};\n  font-weight: 500;\n`\n","import styled from '../../utils/styled'\n\nexport const TeamStats = styled('div')`\n  display: block;\n  max-width: 340px;\n  margin: 1.5rem 0 0;\n  background: rgba(0, 0, 0, 0.45);\n  border-radius: 8px;\n  padding: 12px;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0;\n    flex: 1 0 340px;\n  }\n`\n\nexport const TeamStatsInner = styled('div')`\n  display: flex;\n`\n\nexport const StatItem = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1 1 0;\n  padding: 0 1rem;\n  font-size: 0.8rem;\n`\n\nexport const StatHeading = styled('h4')`\n  margin: 0;\n  margin-bottom: 0.2rem;\n  font-size: 1rem;\n`\n\nexport interface StatNumberProps {\n  attr?: 'win' | 'loss'\n}\n\nexport const StatNumber = styled('p')<StatNumberProps>`\n  margin: 0;\n  font-size: 1.5rem;\n  color: ${props =>\n    // eslint-disable-next-line no-nested-ternary\n    props.attr ? (props.attr === 'win' ? props.theme.colors.attrs.agi : props.theme.colors.attrs.str) : undefined};\n`\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps } from 'react-router'\nimport styled from '../../utils/styled'\n\nimport Page from '../../components/layout/Page'\nimport Container from '../../components/layout/Container'\nimport LoadingOverlay from '../../components/data/LoadingOverlay'\nimport LoadingOverlayInner from '../../components/data/LoadingOverlayInner'\nimport LoadingSpinner from '../../components/data/LoadingSpinner'\n\nimport { ApplicationState } from '../../store'\nimport { TeamSelectedPayload } from '../../store/teams/types'\nimport { selectTeam as selectTeamAction, clearSelected as clearSelectedAction } from '../../store/teams/actions'\nimport DataTable from '../../components/layout/DataTable'\nimport {\n  TeamInfobox,\n  TeamInfoboxBlurBackground,\n  TeamInfoboxInner,\n  TeamLogo,\n  TeamInfoboxHeading,\n  TeamName\n} from '../../components/teams/TeamInfobox'\nimport { TeamStats, TeamStatsInner, StatItem, StatHeading, StatNumber } from '../../components/teams/TeamStats'\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean\n  selected?: TeamSelectedPayload\n  errors?: string\n}\n\ninterface PropsFromDispatch {\n  selectTeam: typeof selectTeamAction\n  clearSelected: typeof clearSelectedAction\n}\n\ninterface RouteParams {\n  id: string\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch & RouteComponentProps<RouteParams>\n\nconst formatPlayerIcon = (accountId: number) => `https://www.opendota.com/assets/images/dota2/players/${accountId}.png`\n\nclass ShowTeamsPage extends React.Component<AllProps> {\n  public componentDidMount() {\n    const { match, selectTeam } = this.props\n\n    selectTeam(match.params.id)\n  }\n\n  public componentWillUnmount() {\n    const { clearSelected } = this.props\n\n    // clear selected team state before leaving the page\n    clearSelected()\n  }\n\n  public render() {\n    const { selected, loading } = this.props\n\n    return (\n      <Page>\n        <Container>\n          <Wrapper>\n            {loading && (\n              <LoadingOverlay>\n                <LoadingOverlayInner>\n                  <LoadingSpinner />\n                </LoadingOverlayInner>\n              </LoadingOverlay>\n            )}\n            {selected && (\n              <>\n                {selected.detail && (\n                  <TeamInfobox>\n                    <TeamInfoboxBlurBackground src={selected.detail.logo_url} />\n                    <TeamInfoboxInner>\n                      {selected.detail.logo_url && <TeamLogo src={selected.detail.logo_url} alt={selected.detail.tag} />}\n                      <TeamInfoboxHeading>\n                        <TeamName>{selected.detail.name}</TeamName>\n                      </TeamInfoboxHeading>\n                      <TeamStats>\n                        <TeamStatsInner>\n                          <StatItem>\n                            <StatHeading>Wins</StatHeading>\n                            <StatNumber attr=\"win\">{selected.detail.wins}</StatNumber>\n                          </StatItem>\n                          <StatItem>\n                            <StatHeading>Losses</StatHeading>\n                            <StatNumber attr=\"loss\">{selected.detail.losses}</StatNumber>\n                          </StatItem>\n                          <StatItem>\n                            <StatHeading>Rating</StatHeading>\n                            <StatNumber>{selected.detail.rating.toFixed(0)}</StatNumber>\n                          </StatItem>\n                        </TeamStatsInner>\n                      </TeamStats>\n                    </TeamInfoboxInner>\n                  </TeamInfobox>\n                )}\n                {selected.players && (\n                  <TableWrapper>\n                    <h2>Current players</h2>\n                    <DataTable columns={['Name', 'Games', 'Winrate']} widths={['auto', '', '']}>\n                      {selected.players\n                        .filter(player => player.is_current_team_member === true)\n                        .map(player => (\n                          <tr key={player.account_id}>\n                            <PlayerDetail>\n                              <PlayerIcon>\n                                <img src={formatPlayerIcon(player.account_id)} alt={player.name} />\n                              </PlayerIcon>\n                              <PlayerName>{player.name}</PlayerName>\n                            </PlayerDetail>\n                            <td>{player.games_played}</td>\n                            <td>{player.wins}</td>\n                          </tr>\n                        ))}\n                    </DataTable>\n                  </TableWrapper>\n                )}\n              </>\n            )}\n          </Wrapper>\n        </Container>\n      </Page>\n    )\n  }\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ teams }: ApplicationState) => ({\n  loading: teams.loading,\n  errors: teams.errors,\n  selected: teams.selected\n})\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps: PropsFromDispatch = {\n  selectTeam: selectTeamAction,\n  clearSelected: clearSelectedAction\n}\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowTeamsPage)\n\nconst Wrapper = styled('div')`\n  position: relative;\n`\n\nconst TableWrapper = styled('div')`\n  position: relative;\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  margin-top: 3rem;\n  min-height: 200px;\n`\n\nconst PlayerDetail = styled('td')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PlayerIcon = styled('div')`\n  position: relative;\n  width: 32px;\n  height: 32px;\n\n  img {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n`\n\nconst PlayerName = styled('div')`\n  flex: 1 1 auto;\n  height: 100%;\n  margin-left: 1rem;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n`\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps, Route, Switch } from 'react-router-dom'\n\nimport TeamsIndexPage from './teams/index'\nimport ShowTeamsPage from './teams/show'\n\nimport { ApplicationState } from '../store'\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean\n  errors?: string\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & RouteComponentProps\n\nconst TeamsPage: React.FC<AllProps> = ({ match }) => {\n  return (\n    <Switch>\n      <Route exact path={`${match.path}/`} component={TeamsIndexPage} />\n      <Route path={`${match.path}/:id`} component={ShowTeamsPage} />\n    </Switch>\n  )\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ teams }: ApplicationState) => ({\n  loading: teams.loading,\n  errors: teams.errors\n})\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(mapStateToProps)(TeamsPage)\n","import { css } from '@emotion/core'\n\nconst normalize = css`\n  /*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n  /* Document\n    ========================================================================== */\n\n  /**\n  * Use a better box model (opinionated).\n  */\n\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  /**\n  * Use a more readable tab size (opinionated).\n  */\n\n  :root {\n    -moz-tab-size: 4;\n    tab-size: 4;\n  }\n\n  /**\n  * Correct the line height in all browsers.\n  */\n\n  html {\n    line-height: 1.15;\n  }\n\n  /* Sections\n    ========================================================================== */\n\n  /**\n  * Remove the margin in all browsers.\n  */\n\n  body {\n    margin: 0;\n  }\n\n  /**\n  * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n      'Segoe UI Symbol';\n  }\n\n  /**\n  * Correct the font size and margin on \\`h1\\` elements within \\`section\\` and\n  * \\`article\\` contexts in Chrome, Firefox, and Safari.\n  */\n\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n\n  /* Grouping content\n    ========================================================================== */\n\n  /**\n  * Add the correct height in Firefox.\n  */\n\n  hr {\n    height: 0;\n  }\n\n  /* Text-level semantics\n    ========================================================================== */\n\n  /**\n  * Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n\n  /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n\n  b,\n  strong {\n    font-weight: bolder;\n  }\n\n  /**\n  * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  * 2. Correct the odd \\`em\\` font sizing in all browsers.\n  */\n\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /**\n  * Add the correct font size in all browsers.\n  */\n\n  small {\n    font-size: 80%;\n  }\n\n  /**\n  * Prevent \\`sub\\` and \\`sup\\` elements from affecting the line height in\n  * all browsers.\n  */\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  /* Forms\n    ========================================================================== */\n\n  /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n\n  /**\n  * Remove the inheritance of text transform in Edge and Firefox.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n\n  /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n\n  /**\n  * Remove the inner border and padding in Firefox.\n  */\n\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n\n  /**\n  * Restore the focus styles unset by the previous rule.\n  */\n\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n\n  /**\n  * Correct the padding in Firefox.\n  */\n\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n\n  /**\n  * Remove the padding so developers are not caught out when they zero out\n  *    \\`fieldset\\` elements in all browsers.\n  */\n\n  legend {\n    padding: 0;\n  }\n\n  /**\n  * Add the correct vertical alignment in Chrome and Firefox.\n  */\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n\n  /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to \\`inherit\\` in Safari.\n  */\n\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n\n  /* Interactive\n    ========================================================================== */\n\n  /*\n  * Add the correct display in Edge and Firefox.\n  */\n\n  details {\n    display: block;\n  }\n\n  /*\n  * Add the correct display in all browsers.\n  */\n\n  summary {\n    display: list-item;\n  }\n`\n\nexport default normalize\n","import { css } from '@emotion/core'\n\nconst globals = css`\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    position: relative;\n    vertical-align: middle;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n`\n\nexport default globals\n","import * as React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { Global } from '@emotion/core'\n\nimport Root from './components/layout/Root'\nimport Header from './components/layout/Header'\nimport IndexPage from './pages/index'\nimport HeroesPage from './pages/heroes'\nimport TeamsPage from './pages/teams'\nimport normalize from './styles/normalize'\nimport globals from './styles/globals'\n\n// If your app is big + you have routes with a lot of components, you should consider\n// code-splitting your routes! If you bundle stuff up with Webpack, I recommend `react-loadable`.\n//\n// $ yarn add react-loadable\n// $ yarn add --dev @types/react-loadable\n//\n// The given `pages/` directory provides an example of a directory structure that's easily\n// code-splittable.\n\nconst Routes: React.SFC = () => (\n  <Root>\n    <Global styles={normalize} />\n    <Global styles={globals} />\n    <Header title=\"Example App\" />\n    <Switch>\n      <Route exact path=\"/\" component={IndexPage} />\n      <Route path=\"/heroes\" component={HeroesPage} />\n      <Route path=\"/teams\" component={TeamsPage} />\n      <Route component={() => <div>Not Found</div>} />\n    </Switch>\n  </Root>\n)\n\nexport default Routes\n","const brandColors = {\n  black: '#000000',\n  gray75: '#2e2e2c',\n  gray60: '#666666',\n  gray50: '#7f7f7f',\n  gray40: '#999999',\n  gray30: '#b2b2b2',\n  gray20: '#cccccc',\n  gray10: '#e5e5e5',\n  gray5: '#ebebea',\n  white: '#fefefe',\n  yellow: '#f3df49',\n  red: '#eb5558',\n  green: '#9ee79a'\n}\n\nexport default brandColors\n","import { lighten } from 'polished'\nimport { Theme } from '../../utils/styled'\nimport brandColors from '../colors/brandColors'\n\nconst lightTheme: Theme = {\n  colors: {\n    background: brandColors.gray75,\n    body: brandColors.gray10,\n    headings: brandColors.gray5,\n    black: brandColors.black,\n    white: brandColors.white,\n    borders: lighten(0.05, brandColors.gray75),\n    tableOdd: lighten(0.025, brandColors.gray75),\n    brand: brandColors.red,\n    attrs: {\n      str: '#f44336',\n      agi: '#39d402',\n      int: '#01a9f4'\n    }\n  },\n  fonts: {\n    headings:\n      // eslint-disable-next-line max-len\n      \"'IBM Plex Sans', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif\",\n    body:\n      // eslint-disable-next-line max-len\n      '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif',\n    monospace: \"'IBM Plex Mono', Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace, monospace\"\n  },\n  fontSizes: {\n    h1: '2.441rem',\n    h2: '1.953rem',\n    h3: '1.563rem',\n    h4: '1.25rem'\n  },\n  containerPadding: '1.5rem',\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px'\n  },\n  widths: {\n    md: '720px',\n    lg: '960px',\n    xl: '1140px'\n  },\n  heights: {\n    header: '60px'\n  }\n}\n\nexport default lightTheme\n","import { darken } from 'polished'\nimport { Theme } from '../../utils/styled'\nimport brandColors from '../colors/brandColors'\n\nconst lightTheme: Theme = {\n  colors: {\n    background: brandColors.gray5,\n    body: brandColors.gray75,\n    headings: brandColors.black,\n    black: brandColors.black,\n    white: brandColors.white,\n    borders: darken(0.05, brandColors.gray5),\n    tableOdd: darken(0.025, brandColors.gray5),\n    brand: brandColors.red,\n    attrs: {\n      str: '#f44336',\n      agi: '#39d402',\n      int: '#01a9f4'\n    }\n  },\n  fonts: {\n    headings:\n      // eslint-disable-next-line max-len\n      \"'IBM Plex Sans', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell,  Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif\",\n    body:\n      // eslint-disable-next-line max-len\n      '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif',\n    monospace: \"'IBM Plex Mono', Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace, monospace\"\n  },\n  fontSizes: {\n    h1: '2.441rem',\n    h2: '1.953rem',\n    h3: '1.563rem',\n    h4: '1.25rem'\n  },\n  containerPadding: '1.5rem',\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px'\n  },\n  widths: {\n    md: '720px',\n    lg: '960px',\n    xl: '1140px'\n  },\n  heights: {\n    header: '60px'\n  }\n}\n\nexport default lightTheme\n","import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Store } from 'redux'\nimport { History } from 'history'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Routes from './routes'\nimport { ApplicationState } from './store'\nimport LayoutContainer from './containers/LayoutContainer'\nimport * as themes from './styles/theme'\n\n// Any additional component props go here.\ninterface MainProps {\n  store: Store<ApplicationState>\n  history: History\n}\n\n// Create an intersection type of the component props and our Redux props.\nconst Main: React.FC<MainProps> = ({ store, history }) => {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <LayoutContainer>\n          {({ theme }) => (\n            <ThemeProvider theme={themes[theme]}>\n              <Routes />\n            </ThemeProvider>\n          )}\n        </LayoutContainer>\n      </ConnectedRouter>\n    </Provider>\n  )\n}\n\n// Normally you wouldn't need any generics here (since types infer from the passed functions).\n// But since we pass some props from the `index.js` file, we have to include them.\n// For an example of a `connect` function without generics, see `./containers/LayoutContainer`.\nexport default Main\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ')\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.')\n\n                // Execute callback\n                if (config.onUpdate) {\n                  config.onUpdate(registration)\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.')\n\n                // Execute callback\n                if (config.onSuccess) {\n                  config.onSuccess(registration)\n                }\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { Reducer } from 'redux'\nimport { LayoutState, LayoutActionTypes } from './types'\n\n// Type-safe initialState!\nexport const initialState: LayoutState = {\n  theme: 'light'\n}\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<LayoutState> = (state = initialState, action) => {\n  switch (action.type) {\n    case LayoutActionTypes.SET_THEME: {\n      return { ...state, theme: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as layoutReducer }\n","export async function callApi(method: string, url: string, path: string, data?: any) {\n  const res = await fetch(`${url}/api${path}`, {\n    method,\n    headers: {\n      Accept: 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n  return res.json()\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { HeroesActionTypes } from './types'\nimport { fetchError, fetchSuccess } from './actions'\nimport { callApi } from '../../utils/api'\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.opendota.com'\n\nfunction* handleFetch() {\n  try {\n    // To call async functions, use redux-saga's `call()`.\n    const res = yield call(callApi, 'get', API_ENDPOINT, '/heroStats')\n\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(res))\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction* watchFetchRequest() {\n  yield takeEvery(HeroesActionTypes.FETCH_REQUEST, handleFetch)\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction* heroesSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default heroesSaga\n","import { Reducer } from 'redux'\nimport { HeroesState, HeroesActionTypes } from './types'\n\n// Type-safe initialState!\nexport const initialState: HeroesState = {\n  data: [],\n  errors: undefined,\n  loading: false\n}\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<HeroesState> = (state = initialState, action) => {\n  switch (action.type) {\n    case HeroesActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case HeroesActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload }\n    }\n    case HeroesActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as heroesReducer }\n","import { all, call, fork, put, takeEvery, takeLatest } from 'redux-saga/effects'\nimport { TeamsActionTypes } from './types'\nimport { fetchError, fetchSuccess, selectTeam, teamSelected } from './actions'\nimport { callApi } from '../../utils/api'\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.opendota.com'\n\nfunction* handleFetch() {\n  try {\n    // To call async functions, use redux-saga's `call()`.\n    const res = yield call(callApi, 'get', API_ENDPOINT, '/teams')\n\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(res))\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\nfunction* handleSelect(action: ReturnType<typeof selectTeam>) {\n  try {\n    const detail = yield call(callApi, 'get', API_ENDPOINT, `/teams/${action.payload}`)\n    const players = yield call(callApi, 'get', API_ENDPOINT, `/teams/${action.payload}/players`)\n\n    if (detail.error || players.error) {\n      yield put(fetchError(detail.error || players.error))\n    } else {\n      yield put(teamSelected({ detail, players }))\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction* watchFetchRequest() {\n  yield takeEvery(TeamsActionTypes.FETCH_REQUEST, handleFetch)\n}\n\nfunction* watchSelectTeam() {\n  yield takeLatest(TeamsActionTypes.SELECT_TEAM, handleSelect)\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction* heroesSaga() {\n  yield all([fork(watchFetchRequest), fork(watchSelectTeam)])\n}\n\nexport default heroesSaga\n","import { Reducer } from 'redux'\nimport { TeamsState, TeamsActionTypes } from './types'\n\n// Type-safe initialState!\nexport const initialState: TeamsState = {\n  data: [],\n  errors: undefined,\n  selected: undefined,\n  loading: false\n}\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<TeamsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case TeamsActionTypes.FETCH_REQUEST:\n    case TeamsActionTypes.SELECT_TEAM: {\n      return { ...state, loading: true }\n    }\n    case TeamsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload }\n    }\n    case TeamsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    case TeamsActionTypes.SELECTED: {\n      return { ...state, loading: false, selected: action.payload }\n    }\n    case TeamsActionTypes.CLEAR_SELECTED: {\n      return { ...state, selected: undefined }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as teamsReducer }\n","import { combineReducers } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\nimport { connectRouter, RouterState } from 'connected-react-router'\nimport { History } from 'history'\n\nimport { LayoutState, layoutReducer } from './layout'\n\nimport heroesSaga from './heroes/sagas'\nimport { heroesReducer } from './heroes/reducer'\nimport { HeroesState } from './heroes/types'\nimport teamsSaga from './teams/sagas'\nimport { TeamsState } from './teams/types'\nimport { teamsReducer } from './teams/reducer'\n\n// The top-level state object\nexport interface ApplicationState {\n  layout: LayoutState\n  heroes: HeroesState\n  teams: TeamsState\n  router: RouterState\n}\n\n// Whenever an action is dispatched, Redux will update each top-level application state property\n// using the reducer with the matching name. It's important that the names match exactly, and that\n// the reducer acts on the corresponding ApplicationState property type.\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    layout: layoutReducer,\n    heroes: heroesReducer,\n    teams: teamsReducer,\n    router: connectRouter(history)\n  })\n\n// Here we use `redux-saga` to trigger actions asynchronously. `redux-saga` uses something called a\n// \"generator function\", which you can read about here:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\nexport function* rootSaga() {\n  yield all([fork(heroesSaga), fork(teamsSaga)])\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\n\nimport Main from './main'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './configureStore'\n\nimport 'typeface-ibm-plex-sans'\n\n// We use hash history because this example is going to be hosted statically.\n// Normally you would use browser history.\nconst history = createBrowserHistory()\n\nconst initialState = window.INITIAL_REDUX_STATE\nconst store = configureStore(history, initialState)\n\nReactDOM.render(<Main store={store} history={history} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { Store, createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n// `react-router-redux` is deprecated, so we use `connected-react-router`.\n// This provides a Redux middleware which connects to our `react-router` instance.\nimport { routerMiddleware } from 'connected-react-router'\n// We'll be using Redux Devtools. We can use the `composeWithDevTools()`\n// directive so we can pass our middleware along with it\nimport { composeWithDevTools } from 'redux-devtools-extension'\n// If you use react-router, don't forget to pass in your history type.\nimport { History } from 'history'\n\n// Import the state interface and our combined reducers/sagas.\nimport { ApplicationState, createRootReducer, rootSaga } from './store'\n\nexport default function configureStore(history: History, initialState: ApplicationState): Store<ApplicationState> {\n  // create the composing function for our middlewares\n  const composeEnhancers = composeWithDevTools({})\n  // create the redux-saga middleware\n  const sagaMiddleware = createSagaMiddleware()\n\n  // We'll create our store with the combined reducers/sagas, and the initial Redux state that\n  // we'll be passing from our entry point.\n  const store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  )\n\n  // Don't forget to run the root saga, and return the store object.\n  sagaMiddleware.run(rootSaga)\n  return store\n}\n"],"sourceRoot":""}